// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCharFra.Models;

namespace MovieCharFra.Migrations
{
    [DbContext(typeof(MovieCharFraDbContext))]
    partial class MovieCharFraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            CharacterId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 3
                        },
                        new
                        {
                            CharacterId = 4,
                            MovieId = 3
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 4
                        },
                        new
                        {
                            CharacterId = 4,
                            MovieId = 4
                        });
                });

            modelBuilder.Entity("MovieCharFra.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Gandalf",
                            Gender = "Male",
                            Name = "Ian McKellen"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Frodo",
                            Gender = "Male",
                            Name = "Elijah Wood"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Don",
                            Gender = "Male",
                            Name = "Marlon Brando"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "Michael",
                            Gender = "Male",
                            Name = "Al Pacino"
                        });
                });

            modelBuilder.Entity("MovieCharFra.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Michael",
                            Name = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Michael",
                            Name = "The Godfather"
                        });
                });

            modelBuilder.Entity("MovieCharFra.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Francis",
                            FranchiseId = 1,
                            Genre = "Crime",
                            Picture = "https://www.imdb.com/title/tt0068646/mediaviewer/rm746868224/",
                            Title = "The Godfather",
                            Trailer = "https://www.imdb.com/video/vi1348706585?playlistId=tt0068646&ref_=tt_pr_ov_vi",
                            Year = 1972
                        },
                        new
                        {
                            Id = 2,
                            Director = "Francis",
                            FranchiseId = 1,
                            Genre = "Crime",
                            Picture = "https://www.imdb.com/title/tt0071562/mediaviewer/rm4159262464/",
                            Title = "The Godfather Part2",
                            Trailer = "https://www.imdb.com/video/vi696162841?playlistId=tt0071562&ref_=tt_pr_ov_vi",
                            Year = 1974
                        },
                        new
                        {
                            Id = 3,
                            Director = "Peter",
                            FranchiseId = 2,
                            Genre = "Adventure",
                            Picture = "https://www.imdb.com/title/tt0167260/mediaviewer/rm584928512/",
                            Title = "The Lord of the Rings: The Return of the King",
                            Trailer = "https://www.imdb.com/video/vi2073101337?playlistId=tt0167260&ref_=tt_pr_ov_vi",
                            Year = 2003
                        },
                        new
                        {
                            Id = 4,
                            Director = "Peter Jackson",
                            FranchiseId = 2,
                            Genre = "Drama",
                            Picture = "https://www.imdb.com/title/tt0120737/mediaviewer/rm3592958976/",
                            Title = "The Lord of the Rings: The Fellowship of the Ring",
                            Trailer = "https://www.imdb.com/video/vi2073101337?playlistId=tt0120737&ref_=tt_pr_ov_vi",
                            Year = 2001
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("MovieCharFra.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieCharFra.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieCharFra.Models.Movie", b =>
                {
                    b.HasOne("MovieCharFra.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieCharFra.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
